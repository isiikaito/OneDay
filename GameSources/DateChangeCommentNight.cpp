/*!
@file DateChangeCommentNight.cpp
@author Kaito Isii
@brief  夜のタスクの表示
*/


#include "stdafx.h"
#include "Project.h"
#include "DateChangeCommentNight.h"
#include "GameUI.h"
namespace basecross
{
	
	constexpr float TEXTUREWSPEED = 2;      //!フェードアウトの速さ
	constexpr float TEXTUREWMAXVALUE = 1.0f;//!テクスチャが完全に表示された

	//--------------------------------------------------------------------------------------
	///	昼から夜に変わる時のコメント
	//--------------------------------------------------------------------------------------

	DateChangeCommentNight::DateChangeCommentNight(const shared_ptr<Stage>& StagePtr, const wstring& TextureKey, bool Trace,
		const Vec2& StartScale, const Vec3& StartPos) :
		GameUI(StagePtr, TextureKey, Trace, StartScale, StartPos),
		m_TextureKey(TextureKey),
		m_Trace(Trace),
		m_StartScale(StartScale),
		m_StartPos(StartPos),
		m_IstexturemaxW(true),
		m_textureW(0.0f),
		m_totalTime(0.0f)
	{}

	void DateChangeCommentNight::OnCreate()
	{
		CreateGameUI(m_TextureKey, m_Trace, m_StartScale, m_StartPos);
		SetDrawActive(true);

	}

	void DateChangeCommentNight::TextureFadeIn()
	{
		auto ptrDraw = GetComponent<PCTSpriteDraw>();
		auto player = GetStage()->GetSharedGameObject<Player>(L"Player");//!プレイヤーの取得
		auto playerCondition = player->GetPlayerChange();				 //!プレイヤーの状態の取得
		 m_IstexturemaxW = player->GetPlayerTaskNight();
		//!人間状態の時
			//!フェードアウトを開始するとき
			if (m_IstexturemaxW == true)
			{
				auto Diffuse = ptrDraw->GetDiffuse();									//!色の取得
				auto fadeinTime = App::GetApp()->GetElapsedTime();						//!時間の取得
				m_textureW += fadeinTime / TEXTUREWSPEED;								//!フェードアウトのスピード
				ptrDraw->SetDiffuse(Col4(Diffuse.x, Diffuse.y, Diffuse.z, m_textureW));	//!テクスチャのRGBWの設定
				//!テクスチャが表示されたら
				if (m_textureW >= TEXTUREWMAXVALUE)
				{

					
					player->SetPlayerTaskNight(false);//!フェードアウトに移行
				}
			}

		
	}

	void DateChangeCommentNight::TextureFadeOut()
	{
		if (m_IstexturemaxW == false)
		{
			if (m_textureW >= 0.0f)
			{
				auto ptrDraw = GetComponent<PCTSpriteDraw>();
				auto Diffuse = ptrDraw->GetDiffuse();									//!色の取得
				auto fadeOutTime = App::GetApp()->GetElapsedTime();						//!時間の取得
				m_textureW -= fadeOutTime / TEXTUREWSPEED;							//!フェードアウトスピード
				ptrDraw->SetDiffuse(Col4(Diffuse.x, Diffuse.y, Diffuse.z, m_textureW));	//!テクスチャのRGBWの設定
			}
		}
	}

	void DateChangeCommentNight::OnUpdate()
	{
		TextureFadeIn();
		TextureFadeOut();
	}



}
